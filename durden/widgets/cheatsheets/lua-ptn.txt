.+%.lua
---- Patterns ----
. all characters
+ (1) * (0) - (0+) ? (0 or 1)
%a letters
%c control characters
%d digits
%l lower case letters
%p punctuation characters
%s space characters
%u upper case letters
%w alphanumeric characters
%x hexadecimal digits
%z NUL- character
%% match %
[] define charset
upcase %(SLP,..) negate

---- string. ----
byte(s, [, i [, j]]) -- string to num-code
char(...) -- num-code to string
find(s, ptn [, init [, plain]])
format(fmtstr, ...) -- %q for lua-str esc.
gmatch(s, ptn) -> iter for ptn
gsub(s, ptn, repl [, n])
len, lower, upper, reverse
rep(s, n)
sub(s, i [, j])

---- math. ----
acos, asin, atan, atan2(y, x)
cos [h], sin [h], ang, deg, rad
ceil, floor, fmod(x, y), modf(x)
pow, exp, frexp, ldexp, log, log10
max(x, ...), min(x, ...)
abs, sqrt,
pi, huge, random, randomseed

---- table. ----
insert(tbl, [pos, ], val)
maxn(tbl) -- largest > 0 numind)
remove(tbl, [, pos])
concat(tbl, [, sep [, i [, j]]])
sort(tbl, [, comp]) -- comp:fn ret bool

---- os. ----
clock (CPU time consumed)
difftime(t1, t2)
time([tbl])

---- () ----
ipairs, next(tbl, [, ind]), pairs
assert, error
pcall(f, arg1, ...) -- bool, retvs
select(ind, fcall) -- for multret
type, tonumber, tostring
